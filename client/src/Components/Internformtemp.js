import React , {useState,useEffect} from 'react'
// import Head from 'next/head'
import { Formik } from 'formik';
import '../styles/Internformtemp.module.css'
// import { scrollToTop } from '@/hooks/scrollTop'
import desktopBgSidebar from '../imagesbg/bg-sidebar-desktop.svg'
import mobileBgSidebar from '../imagesbg/bg-sidebar-mobile.svg'
// import Step1 from '@/components/step/step1'
// import Step2 from '@/components/step/step2'
// import Step3 from '@/components/step/step3'
// import Step4 from '@/components/step/step4'
// import StepFinal from '@/components/step/Finish'
import Tab from '../assets/tab'
import Submitbtn from '../assets/button/submitbtn'
import {stepNavbar} from '../assets/stepNavbar'
// import {schema} from '@/schema'

export default function Internformtemp() {
  const [nextStep, setNextStep] = useState(0);

  const handleNextStep = async (data,actions) => {
    try{
     // scrollToTop()
      setNextStep(prevStep => prevStep + 1);
    } catch (e) {
        alert('error')
    }
  };
  
  const handlePrevStep = async () => {
    try{
    //   scrollToTop()
      setNextStep(prevStep => prevStep - 1);
    } catch (e) {
        alert('error')
    }
  };

 
  
  return (
    <>
      {/* <head>
        <title>Multi Step Form</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </head> */}
    
    <main>
      <nav className="block lg:hidden">
        <div className="bg-no-repeat bg-cover h-[15rem] flex items-center justify-center " 
          style={{ backgroundImage: `url(${mobileBgSidebar.src})` }}
        >
            {stepNavbar.map((step,index) => (
              <div key={step.id}>
                <Tab
                  stepNo={step.stepNo}
                  title=""
                  message=""
                  state={index === nextStep ? "active" : ""}
                />
              </div>
            ))}
        </div>
      </nav>

      <div className="flex flex-col items-center justify-start h-screen pt-32 lg:justify-center lg:pb-0 lg:pt-0 bg-neutral-magnolia">
        <div className="absolute pb-8 mx-4 bg-white rounded-lg shadow-lg top-[10rem] lg:w-[65rem] lg:relative lg:top-0 lg:pb-0 h-[650px] md:h-[610px]">
          <div className="grid grid-cols-12 gap-8 lg:gap-6 md:gap-12">
            <nav className="hidden col-span-12 lg:col-span-4  bg-no-repeat bg-center h-[38rem] lg:block relative" 
            //  style={{ backgroundImage: desktopBgSidebar }} 
            >
            <svg xmlns="http://www.w3.org/2000/svg" width="274" height="568" fill="none" viewBox="0 0 274 568">
    <rect width="274" height="568" fill="#483EFF" rx="10"/>
    <mask id="a" width="274" height="568" x="0" y="0" maskUnits="userSpaceOnUse">
        <rect width="274" height="568" fill="#fff" rx="10"/>
    </mask>
    <g mask="url(#a)">
        <path fill="#6259FF" fill-rule="evenodd" d="M-34.692 543.101C3.247 632.538 168.767 685.017 211.96 612.52c43.194-72.497-66.099-85.653-104.735-160.569-38.635-74.916-68.657-121.674-124.482-104.607-55.824 17.068-55.375 106.32-17.436 195.757Z" clip-rule="evenodd"/>
        <path fill="#F9818E" fill-rule="evenodd" d="M233.095 601.153c60.679-28.278 92.839-143.526 41.875-171.528-50.965-28.003-57.397 47.579-108.059 75.987-50.662 28.408-82.14 50.207-69.044 88.241 13.096 38.034 74.549 35.578 135.228 7.3Z" clip-rule="evenodd"/>
        <path stroke="#fff" stroke-linecap="round" stroke-linejoin="bevel" stroke-width="5" d="m165.305 469.097 10.607-10.806M209.461 474.581l-12.506-10.503M187.56 488.991l-6.908 14.798"/>
        <path fill="#FFAF7E" d="M.305 546.891c37.003 0 67-29.997 67-67s-29.997-67-67-67-67 29.997-67 67 29.997 67 67 67Z"/>
    </g>
</svg>

              <div className="absolute top-[4rem] left-[4rem]">
                {stepNavbar.map((step,index) => (
                  <div key={step.id} >
                    <Tab 
                      stepNo={step.stepNo}
                      title={step.title}
                      message={step.message}
                      state={index === nextStep ? "active" : ""}
                    />
                  </div>
                ))}
              </div>
            </nav>
            <div className="col-span-12 px-8 py-5 lg:pr-[7rem] lg:col-span-8">
              <Formik
                // validationSchema={schema}
                // initialValues={{ 
                //     name:'',
                //     email:'',
                //     phone:'',
                //     plan:'',
                //     price:'',
                //     check_plan:'',
                //     add_on: [],
                //     price_add_on:[],
                // }}
                // onSubmit={(values,actions)=>{
                //   handleNextStep(values,actions);
                // }}
            >
            {/* {({ handleSubmit}) => (
            <>              
              {nextStep == 0 ?
                <Step1/>
              : null}
              {nextStep == 1 ?
                <Step2/>
              : null}
              {nextStep == 2 ?
                <Step3/>
              : null}
              {nextStep == 3 ?
                  <Step4 
                    onClcik={() => setNextStep(prevStep => prevStep - 2)}
                  />
              : null}
              {nextStep == 4 ?
                  <StepFinal/>
              : null}

              <div>
            
              </div>
              </>
              )} */}
                  <Submitbtn
                  stateStep={nextStep}
                  stateHandlePrevStep={handlePrevStep}
                //   stateHandleSubmit={handleSubmit}
                />
              </Formik>
            </div>
          </div>
        </div>
      </div>
    
      {/* <footer className="fixed top-0 w-full p-2 bg-black ">
          <div className="flex items-center justify-center text-xs text-white">
            Challenge by <a className="px-1 text-teal-500 border-b-2 border-teal-500" href="https://www.frontendmentor.io/">Frontend Mentor.</a>
            Coded by <a className="pl-1 text-teal-500 border-b-2 border-teal-500" href="https://portfolio-v2-self.vercel.app/"> SafwanAzman.</a>
          </div>
      </footer> */}
    </main>
    </>
  )
}