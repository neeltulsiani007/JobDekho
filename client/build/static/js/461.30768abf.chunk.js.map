{"version":3,"file":"static/js/461.30768abf.chunk.js","mappings":"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","sources":["Components/Home.js"],"sourcesContent":["import React, { useState , useContext } from 'react'\nimport NavbarIntern from './NavbarIntern';\nimport { useEffect } from 'react';\nimport Post from './Post';\nimport useAxiosPrivate from \"../hooks/useAxiosPrivate\";\nimport { MuteContext } from '../context/MuteProvider';\nimport { useRef } from 'react';\nimport {Oval} from 'react-loader-spinner'\n\n\n\nfunction Home()  {\n\n     const [post,setPost] = useState([]);\n     const [likedpost,setLikedpost] = useState([]);\n     const axiosPrivate = useAxiosPrivate();  \n     const[user,setUser] = useState({})\n     const ref = useRef(null);\n     const [isloading,setIsloading ] = useState(false)\n     const[started,setStarted] = useState(false)\n     const [isIntersecting, setIsIntersecting] = useState(false);\n     const {muted,setMuted} = useContext(MuteContext)\n     const [page,setPage] = useState(0);\n\n    //  useEffect(()=>{\n         \n    //     console.log(\"here once\")\n    //     getpostdatafirsttime();\n        \n    //   }, []);\n\n    //  const getpostdata = async () => {\n    //     setStarted(false)\n    //     console.log(\"inside getpostdata\")\n    //     setIsloading(true)\n    //     console.log(page)\n    //     try {\n    //        await axiosPrivate.get(`/getpostsbyoffset/${page}`, {\n    //             withCredentials:true\n    //         }).then(response=> {\n    //             console.log(\"here\",(response.data.recordset));\n    //         // isMounted && \n    //         setPost(prev => [...prev, ...response.data.recordset])  \n    //         console.log(response.data.hasMore)\n    //     })\n    //     setPage(prevPage => prevPage + 1);\n\n    //     } catch (err) {\n    //         console.error(err);\n    //     }finally{\n    //         setIsloading(false)\n    //     }\n    //     setStarted(true)\n    // }\n   \n    // const getpostdatafirsttime = async () => {\n    //     console.log(\"inside getpostdatafirstime\")\n    //     setIsloading(true)\n    //     console.log(page)\n    //     try {\n    //        await axiosPrivate.get(`/getpostsbyoffset/${0}`, {\n    //             withCredentials:true\n    //         }).then(response=> {\n    //             console.log(\"here\",(response.data.recordset));\n    //         // isMounted && \n    //         setPost(response.data.recordset)  \n    //     })\n    //     setPage(prevPage => prevPage + 1);\n    //         // console.log(\"here\",(response.data.recordset));\n    //         // isMounted && \n    //         // setPost(response.data.recordset.reverse());\n    //     } catch (err) {\n    //         console.error(err);\n    //     }finally{\n    //         setIsloading(false)\n    //     }\n    //     setStarted(true)\n    // }\n    \n    useEffect(() => {\n        let isMounted = true;\n        const controller = new AbortController();   \n        console.log(\"object\")\n\n\n        const getuserdata = async() =>{\n            try {\n                const response = await axiosPrivate.get('/getuser', {\n                    signal: controller.signal,\n                    withCredentials:true\n                });\n                console.log(\"here\",(response.data.recordset[0]));\n                isMounted && setUser(response.data.recordset[0]) ;\n            } catch (err){\n                console.error(err);\n            }\n        }\n\n    \n      const getpostdata = async () => {\n       \n        console.log(\"inside getpostdata\")\n        setIsloading(true)\n        console.log(page)\n        try {\n           await axiosPrivate.get(`/getpost`, {\n                withCredentials:true\n            }).then(response=> {\n                console.log(\"here\",(response.data.recordset));\n            // isMounted && \n            setPost(response.data.recordset.reverse())  \n        \n        })\n        } catch (err) {\n            console.error(err);\n        }finally{\n            setIsloading(false)\n        }\n    }\n       \n\n        const getlikedpostdata = async() =>{\n\n            try {        \n                const res = await axiosPrivate.get('/updatelikes',\n               {\n                 \n                    signal: controller.signal,\n                    withCredentials:true\n                }\n                );\n                console.log(\"here\",(res.data.recordset));\n                isMounted && setLikedpost(res.data.recordset)\n            } catch (err) {\n            console.log('error');\n            }\n        }\n\n        getlikedpostdata();\n        getuserdata();\n        getpostdata();\n       \n\n        document.getElementById(\"homebutton\").style.backgroundColor = \"rgb(17 24 39)\"\n        document.getElementById(\"homebutton\").style.color = \"white\"\n        document.getElementById(\"gethiredbutton\").style.backgroundColor = \"\"\n        document.getElementById(\"projectsbutton\").style.color = \"rgb(156 163 175)\"\n        document.getElementById(\"projectsbutton\").style.backgroundColor = \"\"\n        document.getElementById(\"postbutton\").style.color = \"rgb(156 163 175)\"\n        document.getElementById(\"postbutton\").style.backgroundColor = \"\"\n        document.getElementById(\"gethiredbutton\").style.color = \"rgb(156 163 175)\"\n        return () => {\n          isMounted = false;\n          controller.abort();\n      }\n      },[axiosPrivate]);\n\n        \n//   useEffect(() => {\n\n//     if(started){\n  \n//     const observer = new IntersectionObserver(\n//       ([entry]) => {\n//         console.log(\"homepage\")\n//         setIsIntersecting(entry.isIntersecting);\n//         console.log(\"intersecting is \"+entry.isIntersecting)\n//         if(entry.isIntersecting)\n//         {\n//         getpostdata();\n//         }\n//       },\n//       { rootMargin: \"0px\" ,\n//     threshold:1} \n//     );\n//     console.log(isIntersecting);\n\n//     observer.observe(ref.current);\n//     return () => {\n//       observer.disconnect();\n//     }\n//         }\n//   },[isIntersecting,started]);  \n\n\n\n    \n\n  return (\n    <div>\n       \n      <NavbarIntern />\n      {post?.length\n                ?(\n                    <ul>\n                        {post.map((x, i) =>\n                        <Post  post = {x} likedpost = {likedpost}  user = {user}/>)}\n                    </ul>\n                ): <p></p>\n            }\n       {isloading && <div className='flex h-screen -mt-12   items-center justify-center'>\n            <Oval\n                height=\"80\" \n                width=\"80\" \n                radius=\"9\"\n                color=\"black\" \n                 wrapperStyle={{\n\n                }}\n              />\n              </div>\n            }\n             <div\n             ref={ref}\n             ></div>\n    </div>\n   \n  )\n}\n\nexport default Home\n\n"],"names":["_useState","useState","_useState2","_slicedToArray","post","setPost","_useState3","_useState4","likedpost","setLikedpost","axiosPrivate","useAxiosPrivate","_useState5","_useState6","user","setUser","ref","useRef","_useState7","_useState8","isloading","setIsloading","_useState9","_useState10","_useState11","_useState12","_useContext","useContext","MuteContext","_useState13","muted","setMuted","_useState14","page","useEffect","isMounted","controller","AbortController","console","log","getuserdata","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","wrap","_context","prev","next","get","signal","withCredentials","sent","data","recordset","t0","error","stop","apply","arguments","getpostdata","_ref2","_callee2","_context2","then","reverse","finish","getlikedpostdata","_ref3","_callee3","res","_context3","document","getElementById","style","backgroundColor","color","abort","_jsxs","children","_jsx","NavbarIntern","length","map","x","i","Post","className","Oval","height","width","radius","wrapperStyle"],"sourceRoot":""}